// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// doubling_packer
Rcpp::RawVector doubling_packer(Rcpp::IntegerVector x);
RcppExport SEXP _spacker_doubling_packer(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_packer(x));
    return rcpp_result_gen;
END_RCPP
}
// doubling_unpacker
Rcpp::IntegerVector doubling_unpacker(Rcpp::RawVector x, int n);
RcppExport SEXP _spacker_doubling_unpacker(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(doubling_unpacker(x, n));
    return rcpp_result_gen;
END_RCPP
}
// multiplier_packer
Rcpp::RawVector multiplier_packer(Rcpp::IntegerVector x);
RcppExport SEXP _spacker_multiplier_packer(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(multiplier_packer(x));
    return rcpp_result_gen;
END_RCPP
}
// multiplier_unpacker
Rcpp::IntegerVector multiplier_unpacker(Rcpp::RawVector x, int n);
RcppExport SEXP _spacker_multiplier_unpacker(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RawVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(multiplier_unpacker(x, n));
    return rcpp_result_gen;
END_RCPP
}
// encode_short
Rcpp::RawVector encode_short(Rcpp::IntegerVector x);
RcppExport SEXP _spacker_encode_short(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(encode_short(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spacker_doubling_packer", (DL_FUNC) &_spacker_doubling_packer, 1},
    {"_spacker_doubling_unpacker", (DL_FUNC) &_spacker_doubling_unpacker, 2},
    {"_spacker_multiplier_packer", (DL_FUNC) &_spacker_multiplier_packer, 1},
    {"_spacker_multiplier_unpacker", (DL_FUNC) &_spacker_multiplier_unpacker, 2},
    {"_spacker_encode_short", (DL_FUNC) &_spacker_encode_short, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_spacker(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
